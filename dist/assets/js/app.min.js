"use strict";

angular.module("app", []);
"use strict";

angular.module("app").constant("env", {
    apiUrl: "http://localhost:8080"
});
'use strict';

angular.module('app').component('footerApp', {
    bindings: {},
    templateUrl: 'common/footer/footer.html',
    controller: function controller() {},
    controllerAs: 'ctrl'
});
'use strict';

angular.module('app').component('headerApp', {
    bindings: {
        titleHeader: "="
    },
    templateUrl: 'common/header/header.html',
    controller: function controller() {},
    controllerAs: 'ctrl'
});
'use strict';

angular.module('app').service("CommonService", function ($http, env) {
    var urlBase = env.apiUrl;
    var vm = this;

    vm.getAllColaborators = function () {
        return $http.get(urlBase + '/colaborators');
    };

    vm.createColaborator = function (colaboratorData) {
        console.log('salvar');
        console.log(colaboratorData);
        return $http.post(urlBase + '/colaborators', colaboratorData);
    };

    vm.updateColaborator = function (colaboratorId, colaboratorData) {
        return $http.put(urlBase + '/colaborators/' + colaboratorId, colaboratorData);
    };

    vm.deleteColaborator = function (colaboratorId) {
        return $http.delete(urlBase + '/colaborators/' + colaboratorId);
    };

    vm.getGeneratedPass = function () {
        return $http.get(urlBase + '/colaborators/generate-pass');
    };
});
"use strict";

angular.module("app").controller("CommonController", ["CommonService", CommonController]);

function CommonController(CommonService) {
  var vm = this;
  vm.titleHeader = "MEDIR SENHAS DOS COLABORADORES";
  vm.formData = {};
  vm.colaborators = [];
  vm.showLeadInput = false;

  vm.submitForm = function () {
    if (vm.formData.lead) {
      vm.addSubordinate(vm.formData);
    } else if (vm.formData.id) {
      vm.updateColaborator(vm.formData.id, vm.formData);
    } else {
      vm.createColaborator(vm.formData);
    }
  };

  vm.generatedPassword = function () {
    CommonService.getGeneratedPass().then(function (response) {
      vm.formData.password = response.data;
    }).catch(function (error) {
      console.log(error);
    });
  };

  vm.toggleSubordinates = function (colaborator) {
    colaborator.showSubordinates = !colaborator.showSubordinates;
  };

  vm.editColaborator = function (colaborator) {
    vm.formData = angular.copy(colaborator);
  };

  vm.addSubordinate = function () {
    var newSubordinate = {
      name: vm.formData.name,
      password: vm.formData.password
    };

    var liderId = vm.formData.leadId;
    var colaboratorLead = vm.colaborators.find(function (colaborator) {
      return colaborator.id === liderId;
    });

    if (colaboratorLead) {
      if (colaboratorLead.subordinates) {
        colaboratorLead.subordinates.push(newSubordinate);
      } else {
        colaboratorLead.subordinates = [newSubordinate];
      }

      vm.updateColaborator(colaboratorLead.id, colaboratorLead);

      vm.showSuperiorInput = false;
      vm.formData.lead = '';
      vm.formData.leadId = '';
    } else {
      console.log('Líder não encontrado.');
    }
  };

  vm.enableSubordinate = function (colaborator) {
    vm.showLeadInput = true;
    vm.formData.lead = colaborator.name;
    vm.formData.leadId = colaborator.id;
    console.log('aqui');
  };

  vm.deleteColaborator = function (colaborator) {
    CommonService.deleteColaborator(colaborator.id).then(function () {
      var index = vm.colaborators.indexOf(colaborator);

      if (index !== -1) {
        vm.colaborators.splice(index, 1);
      }
    }).catch(function (error) {
      console.log(error);
    });
  };

  vm.createColaborator = function (colaboratorData) {
    CommonService.createColaborator(colaboratorData).then(function () {
      vm.getColaborators();
      vm.clearForm();
    }).catch(function (error) {
      console.log(error);
    });
  };

  vm.updateColaborator = function (colaboratorId, colaboratorData) {
    CommonService.updateColaborator(colaboratorId, colaboratorData).then(function () {
      vm.getColaborators();
      vm.clearForm();
    }).catch(function (error) {
      console.log(error);
    });
  };

  vm.clearForm = function () {
    vm.formData = {};
  };

  vm.getColaborators = function () {
    CommonService.getAllColaborators().then(function (response) {
      console.log(response.data);
      vm.colaborators = response.data;
    }).catch(function (error) {
      console.log(error);
    });
  };

  vm.init = function () {
    vm.getColaborators();
  };

  vm.init();
}
'use strict';

angular.module('app').component('listColaboratorsApp', {
    bindings: {
        formData: "=",
        showLeadInput: "=",
        colaborators: '<'
    },
    templateUrl: 'components/medidorSenha/allColaborators/listColaborators.html',
    controller: 'CommonController',
    controllerAs: 'ctrl'
});
'use strict';

angular.module('app').component('formApp', {
    bindings: {},
    templateUrl: 'components/medidorSenha/form/form.html',
    controller: 'CommonController',
    controllerAs: 'ctrl'
});